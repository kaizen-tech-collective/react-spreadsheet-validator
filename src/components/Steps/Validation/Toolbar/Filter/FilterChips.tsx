import * as React from 'react';

import Box from '@mui/material/Box';
import Chip from '@mui/material/Chip';

// Generated by Copilot

export type ValidationFilterOptions = 'all' | 'errors' | 'warnings';

export interface FilterChipsProps {
  activeFilter: ValidationFilterOptions;
  onFilterChange: (filter: ValidationFilterOptions) => void;
  errorRows: number;
  warningRows: number;
}

/**
 * Filter chips component for the validation step DataGrid
 * Provides clickable chips to filter by errors and warnings
 */
const FilterChips: React.FC<FilterChipsProps> = ({ activeFilter, onFilterChange, errorRows, warningRows }) => {
  const handleErrorsClick = () => {
    if (errorRows > 0) {
      onFilterChange(activeFilter === 'errors' ? 'all' : 'errors');
    }
  };

  const handleWarningsClick = () => {
    if (warningRows > 0) {
      onFilterChange(activeFilter === 'warnings' ? 'all' : 'warnings');
    }
  };

  return (
    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>
      {errorRows > 0 && (
        <Chip
          label={`${errorRows.toLocaleString()} ${errorRows === 1 ? 'error' : 'errors'}`}
          onClick={handleErrorsClick}
          variant={activeFilter === 'errors' ? 'filled' : 'outlined'}
          color="error"
          size="small"
          clickable
        />
      )}
      {warningRows > 0 && (
        <Chip
          label={`${warningRows.toLocaleString()} ${warningRows === 1 ? 'warning' : 'warnings'}`}
          onClick={handleWarningsClick}
          variant={activeFilter === 'warnings' ? 'filled' : 'outlined'}
          color="warning"
          size="small"
          clickable
        />
      )}
    </Box>
  );
};

export default FilterChips;
